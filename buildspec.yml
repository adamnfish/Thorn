version: 0.2

phases:
  install:
    runtime-versions:
      nodejs: 12
      java: openjdk8

  pre_build:
    commands:
      - echo "[Status] pre build started at `date`"
      - echo Current directory is `pwd`

      # Install software for API build
      - echo Installing sbt
      - wget https://piccolo.link/sbt-1.3.8.zip
      - unzip sbt-1.3.8.zip

      # Install software for frontend build
      - npm install -g create-elm-app@4.2.24 --unsafe-perm=true --allow-root
      - pushd frontend
      - npm install
      - popd

      - echo "[STATUS] pre build step finished"

  build:
    commands:
      - echo "[Status] Build started at `date`"

      # test and package API
      - sbt/bin/sbt -no-colors test "project lambda" assembly
      # frontend
      - pushd frontend
      - elm-app test
      - elm-app build
      - popd

      - echo "[STATUS] Build step finished"

  post_build:
    commands:
      - echo "[STATUS] Deploy started at `date`"

      - echo Deploying API to $FUNCTION_NAME
      - export DIST_KEY=thorn/$STAGE/thorn-lambda.jar
      - aws s3 cp lambda/target/scala-2.13/thorn-lambda.jar s3://$DIST_BUCKET/$DIST_KEY
      - aws lambda update-function-code --function-name $FUNCTION_NAME --s3-bucket $DIST_BUCKET --s3-key $DIST_KEY

      - echo Uploading static site to $WWW_BUCKET_NAME
      - pushd frontend/build
      - aws s3 sync . s3://$WWW_BUCKET_NAME
      - aws cloudfront create-invalidation --distribution-id $CLOUDFRONT_DIST_ID --paths "/*"
      - popd

      - echo "[STATUS] Deploy step finished"

artifacts:
  files:
    - lambda/target/scala-2.13/thorn-lambda.jar
    - frontend/build/*
